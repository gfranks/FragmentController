{
  "name": "Fragmentcontroller",
  "tagline": "",
  "body": "FragmentController\r\n===========\r\n\r\nThis is an Fragment controller for handling toggling between fragments on a given activity/screen using the LocalBroadcastManager. FragmentController is only available for API levels 15+.\r\n\r\nHow To Use It:\r\n-------------\r\n\r\n### Basic Example\r\n\r\n```java\r\npublic class MainFragment extends FragmentController {\r\n\r\n    private List<String> mTags;\r\n\r\n    // return your list of tags defining each possible fragment being displayed\r\n    @NonNull\r\n    @Override\r\n    public List<String> getTagsForFragments() {\r\n        if (mTags == null) {\r\n            mTags = new ArrayList<>();\r\n            mTags.add(FirstFragment.TAG);\r\n            mTags.add(SecondFragment.TAG);\r\n        }\r\n        return mTags;\r\n    }\r\n\r\n    // create your arguments, if any, when first creating the initial fragment\r\n    @Override\r\n    public Bundle getInitialArgumentsForFragment(String tag) {\r\n        return new Bundle();\r\n    }\r\n\r\n    // initialize the fragment yourself, in case any special constructor/method should be called\r\n    @NonNull\r\n    @Override\r\n    public Fragment createFragmentFromTag(String tag, Bundle args) {\r\n        Fragment fragment;\r\n        if (tag.equals(FirstFragment.TAG)) {\r\n            fragment = new FirstFragment();\r\n        } else {\r\n            fragment = new SecondFragment();\r\n        }\r\n\r\n        fragment.setArguments(args);\r\n\r\n        return fragment;\r\n    }\r\n}\r\n```\r\n\r\n### Toggling between Fragments\r\n\r\n```java\r\npublic class FirstFragment extends Fragment {\r\n\r\n    ...\r\n\r\n    // will toggle to the next fragment by referencing the next possble fragment tag\r\n    private void toggle() {\r\n        LocalBroadcastManager.getInstance(getContext()).sendBroadcast(new Intent(FragmentController.BROADCAST_TOGGLE));\r\n    }\r\n}\r\n\r\n```\r\n\r\n\r\nPlease see the sample project included in this repo for an example.\r\n\r\nInstallation:\r\n------------\r\n\r\n### Directly include source into your projects\r\n\r\n- Simply copy the source/resource files from the library folder into your project.\r\n\r\n### Use binary approach\r\n\r\n- Follow these steps to include aar binary in your project:\r\n\r\n    1: Copy com.github.gfranks.fragment.controller-1.0.aar into your projects libs/ directory.\r\n\r\n    2: Include the following either in your top level build.gradle file or your module specific one:\r\n    ```\r\n      repositories {\r\n         flatDir {\r\n             dirs 'libs'\r\n         }\r\n     }\r\n    ```\r\n    3: Under your dependencies for your main module's build.gradle file, you can reference that aar file like so:\r\n    ```compile 'com.github.gfranks.fragment.controller:com.github.gfranks.fragment.controller-1.0@aar'```\r\n\r\nLicense\r\n-------\r\nCopyright (c) 2015 Garrett Franks. All rights reserved.\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}